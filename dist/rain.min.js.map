{"version":3,"file":"rain.min.js","sources":["../node_modules/tslib/tslib.es6.js","../src/ServiceContainer.ts","../src/EventDispatcher.ts","../src/Kernel.ts","../src/ServiceProvider.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","'use strict';\nimport {ServiceProviderInterface} from \"./ServiceProvider\";\n\ninterface FactoryFunction extends Function{\n  () : (new ()=>{}) | {[key: string]: any};\n}\n\nexport interface ContainerInterface {\n  /**\n   * Find a service in the container by its identifier and returns it.\n   * @param id\n   * @return any\n   */\n  get(id);\n\n  /**\n   * Check if given name has been registered.\n   * @param id\n   */\n  has(id: string): boolean;\n\n  /**\n   * Register an existing instance as shared in the container.\n   * @param name\n   * @param factory\n   */\n  instance<T>(name: string, factory: T | FactoryFunction): T;\n\n  /**\n   * Register a shared binding in the container.\n   * @param abstract\n   * @param factory\n   */\n  singleton(abstract: string, factory: FactoryFunction): void;\n\n  /**\n   * Extend a exists instance in the container.\n   * Modify services after definition.\n   * Must return a wrapped instance.\n   *\n   * A little same as decorator.\n   * > An example for decorator:\n   * ```js\n   * Container.decorator('Test', function (test){\n   *   // do something with test\n   *   doSomethingWith(test);\n   *   // return a new Test has been decorated.\n   *   return test;\n   * })\n   * ````\n   */\n  extend(name: string, func: ExtendClosure): void;\n\n  /**\n   * Register middleware.\n   * Similar to extend method, but middleware dose not return the instance.\n   * @param name\n   * @param [func]\n   */\n  middleware(name: string, func: Function): void;\n  middleware(func: Function): void;\n\n  /**\n   * Register a binding with the container.\n   * @param {String} abstract\n   * @param {FactoryFunction} factory\n   * @param {Boolean} singleton\n   */\n  bind(abstract: string, factory: FactoryFunction, singleton: boolean): void;\n\n  /**\n   * Assign tag|tags to bound object(s).\n   *\n   * @param name\n   * @param tags\n   */\n  tag(name: string | string[], tags: any): void;\n\n  /**\n   * Create a instance of service provider\n   *\n   * >> explore\n   *\n   * ```js\n   * kernel.make(['sound', 'setting']).then((sound, setting)=>{\n   *  sound.play('ss.mp3')\n   * })\n   * // or\n   * kernel.make(['sound', 'setting'], (sound, setting) => {\n   *  sound.play('ss.mp3')\n   * })\n   * // or\n   * const sound = kernel.make('sound')\n   * const setting = kernel.make('setting')\n   * sound.play('ss.mp3')\n   * // or\n   * const [sound, setting] = kernel(['sound', 'setting'])\n   * ```\n   *\n   * @param name\n   * @param arg\n   */\n  make(name: string|string[], ...arg): Promise<any>;\n\n  resolve(name: string|string[], func: Function);\n\n  /**\n   * Check if the given name has been resolved.\n   * @param name\n   */\n  isResolved(name): boolean;\n\n  /**\n   * Check the given service is a singleton.\n   * @param name\n   */\n  isSingleton(name: string): boolean;\n\n  destroy(): void;\n}\n\ntype ExtendClosure = (item: any, kernel: ServiceContainer) => any;\n\nconst getServiceNames = (name: string|string[]): string[] => {\n  return Array.isArray(name) ? name : String(name).replace(/\\s+/g, '').split(',')\n};\n\nfunction applyMiddlewares(middlewares: Function[], instance){\n  if (middlewares.length){\n    let idx = 0;\n    const next = function nextMiddleware(err?){\n      if (err){\n        throw err;\n      }\n\n      if (middlewares[idx]){\n        middlewares[idx++].call(null, instance, next);\n      }\n    };\n    next();\n  }\n  return instance;\n}\n\nexport default abstract class ServiceContainer implements ContainerInterface {\n  /**\n   * The container's shared instances.\n   */\n  protected instances: { [key: string]: any } = {};\n  /**\n   * The container's bindings.\n   */\n  protected bindings: { [key: string]: { factory: FactoryFunction, singleton: boolean } } = {};\n  /**\n   * Registered object alias.\n   */\n  // protected alias: { [key: string]: string[] } = {};\n  /**\n   * Tags of registered services.\n   */\n  protected tags: { [key: string]: string[] } = {};\n\n  /**\n   * A map of the types that have been resolved.\n   */\n  protected resolved: { [key: string]: boolean } = {};\n  /**\n   * The extend closures of services.\n   */\n  protected extenders: { [key: string]: ExtendClosure[] } = {};\n  /**\n   * Middlewares of services.\n   */\n  protected middlewares: { [key: string]: Function[]} = {};\n\n  /**\n   * @inheritDoc\n   * @param id\n   */\n  public get(id) {\n\n  }\n\n  /**\n   * Check if given name has been registered.\n   * @param id\n   */\n  public has(id: string) {\n    // return id in this.instances || id in this.bindings;\n    return this.instances.hasOwnProperty(id) || this.bindings.hasOwnProperty(id);\n  }\n\n  /**\n   * Register an existing instance or a function that return the instance as shared in the container.\n   * @param name\n   * @param {FactoryFunction} factory\n   */\n  public instance<T>(name: string, factory: T | FactoryFunction): T {\n    const instance = typeof factory === 'function' ? factory.call({}) : factory;\n    this.instances[name] = instance;\n    return instance;\n  }\n\n  /**\n   * Register a shared binding in the container.\n   * The difference of *signleton* and *instance* method is *signleton* only receive factory function,\n   * but *instance* can also receive a constructed instance.\n   * @param abstract\n   * @param {FactoryFunction} factory\n   */\n  public singleton(abstract: string, factory: FactoryFunction): void {\n    this.bind(abstract, factory, true);\n  }\n\n  /**\n   * Register a binding with the container.\n   * @param {String} abstract\n   * @param {FactoryFunction} factory\n   * @param {Boolean} singleton\n   */\n  public bind(abstract: string, factory: FactoryFunction, singleton: boolean = false) {\n    // drop stale instance\n    delete this.instances[abstract];\n    // todo: If factory is not a function, create a closure that return it\n\n    this.bindings[abstract] = {\n      factory,\n      singleton,\n    };\n\n    // If the abstract type was already resolved in the container, rebound and replace it.\n    if (this.isResolved(abstract)) {\n      this.rebound(abstract);\n    }\n  }\n\n  /**\n   * Extend a exists instance in the container.\n   *\n   * Same as decorator.\n   * > An example for decorator:\n   * ```js\n   * Container.decorator('Test', function (test){\n    *   // do something with test\n    *   doSomethingWith(test);\n    *   // return a new Test has been decorated.\n    *   return test;\n    * })\n    * ````\n    */\n   public extend(name: string, closure: ExtendClosure) {\n     if (name in this.instances) {\n       // If instance is already exists, replace.\n       this.instances[name] = closure(this.instances[name], this);\n     } else {\n       // Else store closure in extenders, then execute it when the service is construct.\n       if (!this.extenders.hasOwnProperty(name)) {\n         this.extenders[name] = [];\n       }\n       this.extenders[name].push(closure);\n\n       if (this.isResolved(name)) {\n         this.rebound(name);\n       }\n     }\n   }\n\n   /**\n    * @inheritdoc\n    * @param name\n    * @param func\n    *\n    * @example\n    * ```js\n    * Container.middleware('Test', function(test, next){\n    *   test.someMethod();\n    *   next();\n    * })\n    * ```\n    */\n   public middleware(name: string | Function, func?: Function) {\n      if (typeof name === 'function'){\n        func = name;\n        name = '__GLOBAL';\n      }\n\n      // @todo Support nested service name 支持循环嵌套的service name\n      if (!this.middlewares){\n        this.middlewares[name] = [];\n      }\n      this.middlewares[name].push(func);\n\n      return this;\n   }\n\n  /**\n   * Assign tag|tags to bound object(s).\n   *\n   * @param name\n   * @param tags\n   */\n  public tag(name: string | string[], tags: any) {\n    let tarArr = [];\n    if (tags instanceof Array) {\n      tarArr = tags;\n    } else {\n      for (let i = 1; i < arguments.length; i++) {\n        tarArr[i - 1] = arguments[i];\n      }\n    }\n\n    tarArr.forEach(tag => {\n      if (!(tag in this.tags)) {\n        this.tags[tag] = [];\n      }\n      if (name instanceof Array) {\n        name.forEach(item => {\n          this.tags[tag].push(item);\n        });\n      } else {\n        this.tags[tag].push(name)\n      }\n    });\n  }\n\n  /**\n   * Create a instance of service provider\n   *\n   * >> explore\n   *\n   * ```js\n   * kernel.make(['sound', 'setting']).then(([sound, setting])=>{\n   *  sound.play('ss.mp3')\n   * })\n   * // or\n   * kernel.make(['sound', 'setting'], (sound, setting) => {\n   *  sound.play('ss.mp3')\n   * })\n   * // or\n   * const sound = kernel.make('sound')\n   * const setting = kernel.make('setting')\n   * sound.play('ss.mp3')\n   * // or\n   * const [sound, setting] = kernel(['sound', 'setting'])\n   * ```\n   * @example\n   *  kernel.make('test').then(test=>test.doSomething())\n   *  kernel.make('test,test2').then(([test,test2])=>{\n   *    test.doSomething();\n   *    test2.doSomething();\n   *  })\n   *  kernel.make(['test', 'test2']).then(([test, test2])=>{\n   *    test.doSomething();\n   *    test2.doSomething();\n   *  })\n   * @param deps\n   * @param arg\n   */\n  public make(deps: string|string[], ...arg): Promise<any> {\n    return new Promise(((resolve, reject) => {\n      const names = getServiceNames(deps);\n      function resolveDeps(){\n        if (Array.isArray(deps) || names.length > 1){\n          // const obj = {};\n          const arr = [];\n          for (let i=0; i<names.length; i++){\n            // obj[names[i]] = arguments[i];\n            arr.push(arguments[i]);\n          }\n          // resolve(obj);\n          resolve(arr);\n        } else {\n          resolve(arguments[0]);\n        }\n      }\n      try {\n        this.resolve(names, resolveDeps, ...arg);\n      }catch (e) {\n        reject(e);\n      }\n    }))\n  }\n\n  /**\n   * @link https://www.cnblogs.com/pqjwyn/p/9850428.html\n   * @param deps\n   * @param func\n   * @param parameters\n   * @example\n   * kernel.resolve('test', function(test){test.doSomething()})\n   * kernel.resolve('test,test2', function(test, test2){test.doSomething(); test2.doSomething()})\n   * kernel.resolve(['test','test2'], function(test, test2){test.doSomething(); test2.doSomething()})\n   */\n  public resolve(deps: string|string[], func: Function, parameters: any[] = []) {\n    const names = getServiceNames(deps);\n\n    const services = names.map(name => {\n      if (name in this.instances) {\n        return this.instances[name];\n      }\n\n      let instance = this.build(name, parameters);\n      this.getExtenders(name).forEach((extender: ExtendClosure) => {\n        instance = extender(instance, this);\n      });\n\n      // @todo Middleware process.\n      // @todo 处理 __GLOBAL 的middleware\n      applyMiddlewares(this.getMiddlewares(name), instance);\n\n      if (this.isSingleton(name)) {\n        this.instances[name] = instance;\n      }\n      // @todo if is not singleton, resolved may be always false;\n      this.resolved[name] = true;\n      return instance;\n    });\n\n    func.apply(null, services);\n  }\n\n  /*\n  public make(make: string, parameters = []){\n    return this.resolve(name, parameters);\n  }\n  */\n\n  /**\n   * Check if the given name has been resolved.\n   * @param name\n   */\n  public isResolved(name): boolean {\n    return this.resolved.hasOwnProperty(name) || this.instances.hasOwnProperty(name);\n  }\n\n  /**\n   * Check the given service is a singleton.\n   * @param name\n   */\n  public isSingleton(name: string): boolean {\n    return this.instances.hasOwnProperty(name) || Boolean(this.bindings[name].singleton);\n  }\n\n  public destroy() {\n    this.instances = {};\n    this.tags = {};\n    this.bindings = {};\n    this.resolved = {};\n    this.extenders = {};\n  }\n\n  protected rebound(name) {\n    // const instance = this.make(abstract);\n    this.make(name);\n  }\n\n  protected build(name: string, parameters: any[] = []) {\n    if (!this.bindings.hasOwnProperty(name)) {\n      throw new Error(`Service ${name} is not exists.`);\n    }\n    const instance = this.bindings[name].factory.apply(null, parameters);\n    return instance;\n  }\n\n  protected getExtenders(name: string): ExtendClosure[] {\n    return this.extenders[name] || [];\n  }\n\n  protected getMiddlewares(name: string): Function[] {\n    return this.middlewares[name] || [];\n  }\n}\n","interface ListenerItem {\n  listener: Function;\n  once?: boolean;\n}\n\ntype ListenerItemKeyMap = {\n  [key: string]: ListenerItem[];\n};\n\nfunction getListenerIndex(listeners: ListenerItem[], listener: ListenerItem['listener']): number {\n  let l = listeners.length;\n  while (l--) {\n    if (listeners[l].listener === listener) {\n      return l;\n    }\n  }\n  return -1;\n}\n\nclass EventDispatcher<TEvent extends string = string> {\n  private listeners: ListenerItemKeyMap = {};\n\n  /**\n   * Dispatch an event.\n   * @param eventName\n   * @param args\n   */\n  public dispatch(eventName: TEvent, args?: any[]): this {\n    if (eventName in this.listeners) {\n      const listeners = this.listeners[eventName];\n      this.callListeners(listeners, eventName, args);\n    }\n\n    return this;\n  }\n\n  /**\n   * Dispatch an event.\n   * Unlike dispatch, emit passes the remaining parameters instead of an array.\n   * @param eventName\n   * @param args\n   */\n  public emit(eventName: TEvent, ...args: any[]): this {\n    // const _args = Array.prototype.slice.call(arguments, 1);\n    return this.dispatch(eventName, args);\n  }\n\n  /**\n   * Alias of addListener.\n   * @param eventName\n   * @param listener\n   * @param once\n   */\n  public on(eventName: TEvent, listener: Function, once = false): this {\n    return this.addListener(eventName, listener, once);\n  }\n\n  /**\n   * Alias of addListener(eventName, listener, true)\n   * @param eventName\n   * @param listener\n   */\n  public once(eventName: TEvent, listener: Function): this {\n    return this.addListener(eventName, listener, true);\n  }\n\n  /**\n   * Alias of removeListener.\n   * @param eventName\n   * @param listener\n   */\n  public off(eventName: TEvent, listener?: Function): this {\n    if (listener) return this.removeListener(eventName, listener);\n    else return this;\n  }\n\n  /**\n   * Add event listener.\n   * @param eventName\n   * @param listener\n   * @param once\n   */\n  public addListener(eventName: TEvent, listener: Function, once = false): this {\n    if (!this.listeners[eventName]) {\n      this.listeners[eventName] = [];\n    }\n    // @todo filter repeat listener\n    /*\n    let arr = this.listeners[eventName];\n    arr = arr.concat([{listener, once}]);\n    this.listeners[eventName] = arr;\n    return this;\n    */\n\n    this.listeners[eventName].push({\n      listener,\n      once\n    });\n\n    return this;\n  }\n\n  /**\n   * Remove event listener.\n   * @param eventName\n   * @param listener\n   */\n  public removeListener(eventName: TEvent, listener: Function): this {\n    const arr = this.listeners[eventName];\n    if (!arr || arr.length === 0) return this;\n    const idx = getListenerIndex(arr, listener);\n    if (idx !== -1) {\n      arr.splice(idx, 1);\n      /*\n      if (arr.length > 1) {\n        this.listeners[eventName] = arr.slice(0, idx).concat(arr.slice(idx + 1));\n      } else {\n        delete this.listeners[eventName];\n      }\n      */\n    }\n    return this;\n  }\n\n  /**\n   * Remove part listeners bound to eventName / all listeners of eventName / all listeners.\n   * @param eventName\n   * @param listeners\n   */\n  public removeListeners(eventName?: TEvent, listeners?: Function[]): this {\n    if (eventName && this.listeners[eventName]) {\n      // filter compatibility： IE>=9\n      this.listeners[eventName] = listeners ? this.listeners[eventName].filter(item => listeners.indexOf(item.listener) === -1) : [];\n    } else {\n      this.listeners = {};\n    }\n    return this;\n  }\n\n  /**\n   * Check whether a event has binding listeners.\n   * @param eventName\n   */\n  public hasListeners(eventName?: TEvent): boolean {\n    if (eventName) {\n      return this.listeners[eventName].length > 0;\n    }\n\n    return !!Object.keys(this.listeners).find(listener => Boolean(listener))\n  }\n\n  /**\n   * Get all listeners bound to the event.\n   * @param eventName\n   */\n  public getListeners(eventName?: TEvent): ListenerItem[] | ListenerItemKeyMap {\n    if (eventName) {\n      return this.listeners[eventName] || [];\n    }\n\n    return this.listeners;\n  }\n\n  /**\n   * Process event listeners.\n   * @param listeners\n   * @param eventName\n   * @param args\n   */\n  protected callListeners(listeners: ListenerItem[], eventName: TEvent, args?: any[]): void {\n    // listeners = Array.prototype.slice.call(listeners);\n    // const defer = typeof Promise === 'function' ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout;\n    const process = (): void => {\n      let listener: ListenerItem | undefined;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      let result: false | any;\n      const start = +new Date();\n      while ((listener = listeners.shift())) {\n        if (listener.once) {\n          this.removeListener(eventName, listener.listener);\n        }\n        // If result===false, stop listener call\n        result = listener.listener.apply(this, args || []);\n        // result = listener.listener(args || [])\n        if (result === false || +new Date() - start > 25) {\n          break;\n        }\n      }\n      if (result !== false && listener) {\n        setTimeout(process);\n        // requestAnimationFrame(process);\n      }\n    };\n    process();\n\n    /*\n    let listener: ListenerItem;\n    let result: any;\n    for (let i = 0; i < listeners.length; i++) {\n      listener = listeners[i];\n      if (listener.once) {\n        this.removeListener(eventName, listener.listener);\n      }\n\n      // If return false, meaning stop event propagation\n      // listener.listener(event);\n      result = listener.listener.apply(this, args || []);\n      if (result === false) break;\n    }\n    */\n  }\n}\n\nexport default EventDispatcher;\n","'use strict';\nimport {ServiceProviderInterface, ServiceProviderConstructor} from \"./ServiceProvider\";\nimport ServiceContainer, { ContainerInterface } from \"./ServiceContainer\";\nimport EventDispatcher from './EventDispatcher';\n\n\nexport interface KernelInterface extends ContainerInterface{\n  // constructor(debug: boolean);\n  boot(): Promise<any>;\n  register(provider: ServiceProviderConstructor | ServiceProviderInterface, options?:{}): ServiceProviderInterface;\n  isBooted(): boolean;\n  destroy(): void;\n}\n\nexport interface KernelConstructor {\n  new (): KernelInterface;\n  readonly prototype: KernelInterface;\n}\n\n\nclass Kernel extends ServiceContainer implements KernelInterface{\n  static VERSION = '1.0.0';\n  static VERSION_ID= 10000;\n\n  /**\n   * A set of ServiceProvider\n   */\n  protected serviceProviders: {provider: ServiceProviderInterface, options: any}[] = [];\n\n  protected startTime: Date;\n  protected booted: boolean = false;\n  protected debug: boolean;\n\n  public dispatcher: EventDispatcher;\n\n  constructor(debug: boolean = false){\n    super();\n    this.debug = !!debug;\n\n    this.dispatcher = new EventDispatcher();\n\n    // this.instance('kernel', this);\n    // this.instance('container', this);\n\n    this.registerBaseServiceProvider();\n  }\n\n  public boot(): Promise<any>{\n    if (this.booted){\n      return Promise.resolve(true);\n    }\n\n    this.resolveProviderRegister();\n\n    this.serviceProviders.forEach(provider => {\n      this.bootProvider(provider.provider);\n    });\n\n    this.startTime = new Date();\n    this.booted = true;\n\n    console.log(new Date().toLocaleTimeString(), 'Kernel Booted');\n    return Promise.resolve(true);\n  }\n\n  /**\n   * Register service provider\n   * @todo It seems more suitable to change the name to `provider`, or `registerProvider`?\n   * @param {ServiceProviderInterface} Provider\n   * @param options\n   */\n  public register(Provider: ServiceProviderConstructor | ServiceProviderInterface, options: {args?: any}={}) {\n    const provider: ServiceProviderInterface = typeof Provider === 'object' ? Provider : new Provider(this, options.args);\n\n    /*\n    try{\n      provider.register();\n    }catch (e) {\n      console.warn(e);\n    }\n    */\n\n    this.serviceProviders.push({\n      provider: provider,\n      options,\n    });\n\n    if (this.booted){\n      provider.register();\n      this.bootProvider(provider);\n    }\n    return provider;\n  }\n\n  public destroy(): void{\n    // Object.getOwnPropertyNames(this).forEach(key => this[key] = null);\n    this.serviceProviders.forEach(item => item.provider.destroy());\n    this.serviceProviders = [];\n\n    super.destroy();\n  }\n\n  public isBooted(): boolean{\n    return this.booted;\n  }\n\n  /**\n   * @deprecated\n   * Register base service provider.\n   * e.g. Event, Router, Logger ,etc\n   */\n  protected registerBaseServiceProvider(){\n    console.warn('registerBaseServerProvider method is deprecated.');\n  }\n\n  /**\n   * Register services\n   */\n  protected resolveProviderRegister(){\n    this.serviceProviders.forEach(item => {\n      item.provider.register();\n    });\n  }\n\n  /**\n   * Boot the given service provider.\n   * @param provider\n   */\n  protected bootProvider(provider: ServiceProviderInterface){\n    // provider.boot.call(this);\n    provider.boot();\n  }\n\n  private initBundles(){\n\n  }\n\n}\nObject.freeze(Kernel);\nexport default Kernel;\n","import Kernel, {KernelInterface} from \"./Kernel\";\n\nexport interface ServiceProviderInterface {\n  /**\n   * Kernel instance\n   */\n  kernel: KernelInterface;\n\n  // new(kernel: KernelInterface, args): ServiceProviderInterface;\n\n  // constructor(kernel: KernelInterface, args: any);\n  /**\n   * 注册服务\n   */\n  register(): void;\n\n  boot(): void;\n\n  destroy(): void;\n}\n\nexport interface ServiceProviderConstructor {\n  new (kernel: KernelInterface, options): ServiceProviderInterface;\n  readonly prototype: ServiceProviderInterface;\n}\n\n/**\n * Kernel初始化时会先调用register完成某些服务的注册绑定\n * 所有ServiceProvider的register()方法调用完成后，\n * 再调用他们的boot()方法(可在kernel初始化的最后一步kernel.boot()中实现)\n * 在boot方法中可以使用已注册的所有服务\n * @see https://learnku.com/articles/6189/laravel-service-provider-detailed-concept\n */\nexport abstract class ServiceProvider implements ServiceProviderInterface{\n\n  constructor(public kernel: Kernel, protected options={}) {\n    this.kernel = kernel;\n  }\n\n  /**\n   * 注册服务\n   * 在容器中注册绑定\n   */\n  public abstract register(): void;\n\n  /**\n   * 引导服务\n   * 引导方法\n   * 此方法在所有服务都注册后调用， 此时可以随意使用已注册的所有服务\n   */\n  public abstract boot(): void;\n\n  /**\n   * $ explore #1\n   * 在浏览器环境下不一定好用，因为动态加载文件都是异步的\n   *\n   * 获取提供器提供的服务\n   * 一般情况下不需要此方法，但是当provider标记为延迟加载服务时（defer属性？）\n   * 只有获取相关服务 （e.g. `kernel.make('b')`, b 为provides返回的值）时，才会加载此ServiceProvider\n   * 例：\n   * kernel.make('hash')\n   * 相当于告诉kernel使用hash service时，我这里有hash服务，我会自动帮你加载哦~\n   *\n   * $ explore #2\n   * 提供延迟属性， 提供服务名称及对应的文件地址， 在引用相关的服务时，动态加载相关文件\n   */\n  public provides(): [] {\n    return [];\n  }\n\n  public destroy() {\n    this.kernel = null;\n  }\n}\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__spreadArrays","s","i","il","arguments","length","r","k","a","j","jl","getServiceNames","name","isArray","String","replace","split","this","ServiceContainer","id","instances","bindings","factory","instance","call","abstract","bind","singleton","isResolved","rebound","closure","extenders","push","func","middlewares","tags","tarArr","forEach","tag","_this","item","deps","_i","arg","Promise","resolve","reject","names","arr","e","parameters","services","map","build","getExtenders","extender","idx_1","next_1","err","applyMiddlewares","getMiddlewares","isSingleton","resolved","apply","make","Error","EventDispatcher","eventName","args","listeners","callListeners","dispatch","listener","once","addListener","removeListener","idx","l","getListenerIndex","splice","filter","indexOf","keys","find","process","result","start","Date","shift","setTimeout","debug","_super","dispatcher","registerBaseServiceProvider","__","constructor","prototype","create","__extends","Kernel","booted","resolveProviderRegister","serviceProviders","provider","bootProvider","startTime","console","log","toLocaleTimeString","Provider","options","register","destroy","warn","boot","freeze","kernel","ServiceProvider"],"mappings":"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"}